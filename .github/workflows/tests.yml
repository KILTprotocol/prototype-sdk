name: Lint and Test

on:
  push:
    branches:
      - develop
      - master
    tags:
      - '*'
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'dc.build.node.yml'
      - '.github/workflows/*publish.yml'
  pull_request:
    branches:
      - develop
      - master

jobs:
  check_skip:
    runs-on: ubuntu-latest
    if: "! startsWith(github.event.head_commit.message, '[CI Skip]') && github.repository == 'kiltprotocol/sdk-js'"
    steps:
      - name: Not Skipped
        run: echo "Not Skipped"

  build:
    runs-on: ubuntu-latest

    needs: check_skip

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install, build and test
        run: |
          yarn install --immutable
          yarn lint
          yarn build
          yarn test:ci
        env:
          CI: true

  integration_test:
    runs-on: ubuntu-latest

    needs: check_skip

    steps:
      - uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Use Node.js 10
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: yarn install and test
        timeout-minutes: 60
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: kilt/prototype-chain
          IMAGE_TAG: latest-develop
        run: |
          yarn install --immutable
          yarn build
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker run -d --rm -p 9944:9944 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./target/release/mashnet-node --dev --ws-port 9944 --ws-external
          sleep 5s
          yarn test:integration:run
          docker stop $(docker ps -f ancestor=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -q)

  run_example:
    runs-on: ubuntu-latest

    needs: check_skip

    steps:
      - uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Use Node.js 10
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: yarn install and test
        timeout-minutes: 10
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: kilt/prototype-chain
          IMAGE_TAG: latest-develop
        run: |
          yarn install --immutable
          yarn build
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker run -d --rm -p 9944:9944 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./target/release/mashnet-node --dev --ws-port 9944 --ws-external
          sleep 5s
          yarn ts-node docs/example.ts
          docker stop $(docker ps -f ancestor=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -q)

  run_getting-started:
    runs-on: ubuntu-latest

    needs: check_skip

    steps:
      - uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Use Node.js 10
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: yarn install and test
        timeout-minutes: 10
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: kilt/prototype-chain
          IMAGE_TAG: latest-develop
        run: |
          yarn install --immutable
          yarn build
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker run -d --rm -p 9944:9944 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./target/release/mashnet-node --dev --ws-port 9944 --ws-external
          sleep 5s
          yarn ts-node docs/getting-started.ts
          docker stop $(docker ps -f ancestor=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -q)
